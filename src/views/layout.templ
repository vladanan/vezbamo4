package views

import (
	"github.com/BurntSushi/toml"
	"github.com/nicksnyder/go-i18n/v2/i18n"
	"golang.org/x/text/language"
	
	"net/http"
	"github.com/gorilla/sessions"
	"fmt"
)

func Translate (store sessions.Store, r *http.Request, item string) string {

	bundle := i18n.NewBundle(language.English)
	bundle.RegisterUnmarshalFunc("toml", toml.Unmarshal)
	bundle.MustLoadMessageFile("assets/i18n/active.en.toml")
	bundle.MustLoadMessageFile("assets/i18n/active.es.toml")
	bundle.MustLoadMessageFile("assets/i18n/active.sr.toml")

	// https://pkg.go.dev/github.com/gorilla/sessions@v1.2.2#section-documentation
	// https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-cookie-same-site-00
	session, err := store.Get(r, "vezbamo.onrender.com-users")
	if err != nil {
		// http.Error(w, err.Error(), http.StatusInternalServerError)
		// return
		fmt.Println("Error on get store:", err)
	}

	// session.Options = &sessions.Options{
	// 	Path:     "/",
	// 	MaxAge:   86400 * 7,
	// 	HttpOnly: true,
	// 	// SameSite: http.SameSiteNoneMode,
	// 	// SameSite: http.SameSiteDefaultMode,
	// 	// SameSite: http.SameSiteLaxMode,
	// 	// SameSite: http.SameSiteStrictMode,
	// 	// SameSite: http.SameSite(0),
	// }

	auth_map := session.Values["authenticated"]

	if auth_map == nil {
		session.Values["authenticated"] = false
	}

	lang_map := session.Values["language"]
	sessionLanguage := ""
	
	if lang_map != nil {
		sessionLanguage = lang_map.(string)
	}

	lang := r.FormValue("lang")
  accept := r.Header.Get("Accept-Language")

	if sessionLanguage != "" {
		accept = sessionLanguage
	}

	//fmt.Println("language: ", lang, "header: ", accept)

	localizer := i18n.NewLocalizer(bundle, lang, accept)

	helloPerson := localizer.MustLocalize(&i18n.LocalizeConfig{
			DefaultMessage: &i18n.Message{
				ID:    item,
			},
		})

		// myUnreadEmails := localizer.MustLocalize(&i18n.LocalizeConfig{
		// 	DefaultMessage: &i18n.Message{
		// 		ID:          "MyUnreadEmails",
		// 		Description: "The number of unread emails I have",
		// 		One:         "I have {{.PluralCount}} unread email.",
		// 		Other:       "I have {{.PluralCount}} unread emails.",
		// 	},
			
		// })

		return helloPerson
}


templ Layout(store sessions.Store, r *http.Request) {
	//style="background-color: rgb(70,110,110)"
	//bg-gradient-to-br from-sky-100 via-emerald-100 to-amber-50
	// bg-gradient-to-br from-sky-400 via-emerald-200 to-amber-200
	// sdffsdfas

  <!DOCTYPE html>
	<html lang="en-US">

    <head>
      <meta charset="UTF-8"></meta>
      <meta name="viewport" content="width=device-width, initial-scale=1.0"></meta>
      <link href="static/output.css" rel="stylesheet"></link>
      <script src="static/htmx.min.js"></script>
			<script src="static/reload.js"></script>
			<link rel="icon" href="static/vezbamo_ico4.svg" />
			<title>Vezbamo</title>
    </head>

    <body class="relative m-auto sm:w-auto max-w-md h-max bg-gradient-to-br from-sky-400 via-emerald-200 to-amber-200">

      <div id="heading">
        @Header(store, r)</div>

      <div id="wrapper">
        { children... }
      </div>

      <div id="footer">
        @Footer()
      </div>

    </body>
		
  </html>

}
