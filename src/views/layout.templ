package views

import (
	"github.com/BurntSushi/toml"
	"github.com/nicksnyder/go-i18n/v2/i18n"
	"golang.org/x/text/language"
	
	"net/http"
	"github.com/gorilla/sessions"
	"log"
)

func Translate (store sessions.Store, r *http.Request, item string) string {

	bundle := i18n.NewBundle(language.English)
	bundle.RegisterUnmarshalFunc("toml", toml.Unmarshal)
	bundle.MustLoadMessageFile("assets/i18n/active.en.toml")
	bundle.MustLoadMessageFile("assets/i18n/active.sh.toml")
	// bundle.MustLoadMessageFile("assets/i18n/active.es.toml")

	// https://pkg.go.dev/github.com/gorilla/sessions@v1.2.2#section-documentation
	// https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-cookie-same-site-00
	// https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie
	// https://stackoverflow.com/questions/67821709/this-set-cookie-didnt-specify-a-samesite-attribute-and-was-default-to-samesi
	
	session, err := store.Get(r, "vezbamo.onrender.com-users")
	if err != nil {
		// http.Error(w, err.Error(), http.StatusInternalServerError)
		// return
		log.Println("layout: Translate: Error on get store:", err)
	}

	session.Options = &sessions.Options{
		Path:     "/",
		MaxAge:   86400 * 7,
		HttpOnly: true,
		// SameSite: http.SameSiteNoneMode,
		// SameSite: http.SameSiteDefaultMode,
		// SameSite: http.SameSiteLaxMode,
		SameSite: http.SameSiteStrictMode,
		// SameSite: http.SameSite(0),
	}

	mail_map := session.Values["user_mail"]

	if mail_map == nil {
		session.Values["user_mail"] = "aaa"
	}


	auth_map := session.Values["authenticated"]

	if auth_map == nil {
		session.Values["authenticated"] = false
	}

	lang_map := session.Values["language"]
	sessionLanguage := ""
	
	if lang_map != nil {
		sessionLanguage = lang_map.(string)
	}

	lang := r.FormValue("lang")
  accept := r.Header.Get("Accept-Language")

	if sessionLanguage != "" {
		accept = sessionLanguage
	}

	//fmt.Println("language: ", lang, "header: ", accept) ,jk

	localizer := i18n.NewLocalizer(bundle, lang, accept)

	helloPerson := localizer.MustLocalize(&i18n.LocalizeConfig{
		DefaultMessage: &i18n.Message{
			ID:    item,
		},
	})

	// myUnreadEmails := localizer.MustLocalize(&i18n.LocalizeConfig{
	// 	DefaultMessage: &i18n.Message{
	// 		ID:          "MyUnreadEmails",
	// 		Description: "The number of unread emails I have",
	// 		One:         "I have {{.PluralCount}} unread email.",
	// 		Other:       "I have {{.PluralCount}} unread emails.",
	// 	},
		
	// })

	return helloPerson
}


templ Layout(store sessions.Store, r *http.Request) {

  <!DOCTYPE html>
	<html lang="en-US">

    <head>

      <meta charset="UTF-8"></meta>
      <meta name="viewport" content="width=device-width, initial-scale=1.0"></meta>
			<!-- <meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1" /> --> 
			<link rel="icon" href="static/vezbamo_ico4.svg" />
			<title>Vezbamo</title>

			<script src="static/reload.js"></script>			
			<script src="static/htmx.min.js"></script>			
      
			<link href="static/output.css" rel="stylesheet"></link>

			<!-- Link Swiper's CSS -->
			<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />

			<!-- Demo styles height: 100%; -->
			<style>
				.swiper {
					width: 100%;
					height: 550px;

				}

				.swiper-slide {
					font-size: 18px;
					color: #fff;
					-webkit-box-sizing: border-box;
					box-sizing: border-box;
					padding: 40px 60px;
				}

				.parallax-bg {
					position: absolute;
					left: 0;
					top: 0;
					width: 130%;
					height: 100%;
					-webkit-background-size: cover;
					background-size: cover;
					background-position: center;
				}

				.swiper-slide .title {
					font-size: 41px;
					font-weight: 300;
				}

				.swiper-slide .subtitle {
					padding: 0.5rem;
					font-size: 21px;
					max-width: 400px;
					line-height: 1.1;
				}

				.swiper-slide .text {
					padding: 0.5rem;
					margin-top: 10px;
					
					max-width: 400px;
					line-height: 1.5;
				}
			</style>

    </head>

    <body class="relative m-auto max-w-7xl top-2 h-screen bg-gradient-to-br from-slate-950 via-sky-950 to-blue-950">

			<div id="heading" class="relative h-auto">
        @Header(store, r)
			</div>

      <div id="wrapper" class="relative h-auto">
        { children... }
      </div>

      <div id="footer" class="relative h-auto">
        @Footer()
      </div>

			<!-- Swiper JS -->
			<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

			<!-- Initialize Swiper -->
			<script>
				var swiper = new Swiper(".mySwiper", {
					speed: 600,
					parallax: true,
					pagination: {
						el: ".swiper-pagination",
						clickable: true,
					},
					navigation: {
						nextEl: ".swiper-button-next",
						prevEl: ".swiper-button-prev",
					},
				});
			</script>

    </body>
		
  </html>

}
